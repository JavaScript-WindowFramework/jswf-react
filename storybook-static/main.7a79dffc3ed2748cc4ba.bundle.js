(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1260:function(module,exports,__webpack_require__){"use strict";__webpack_require__(6),__webpack_require__(52),__webpack_require__(46),__webpack_require__(41),__webpack_require__(44),__webpack_require__(1261),__webpack_require__(1262),__webpack_require__(9),__webpack_require__(47);var _clientApi=__webpack_require__(76),_clientLogger=__webpack_require__(50),_configFilename=__webpack_require__(1263);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),_configFilename.loaders&&_configFilename.loaders.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1263:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var parameters={docs:{inlineStories:!1}}},1264:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(435).configure)([__webpack_require__(1265)],module,!1)}).call(this,__webpack_require__(129)(module))},1265:function(module,exports,__webpack_require__){var map={"./Samples/ClientStyle.stories.tsx":342,"./Samples/ListViewBasic.stories.tsx":343,"./Samples/ListViewSimple.stories.tsx":344,"./Samples/ListViewSimple2.stories.tsx":1271,"./Samples/SplitViewBasic.stories.tsx":345,"./Samples/SplitViewSimple.stories.tsx":346,"./Samples/TreeViewBasic.stories.tsx":347,"./Samples/TreeViewSimple.stories.tsx":348,"./Samples/WindowBasic.stories.tsx":349,"./Samples/WindowChild.stories.tsx":350,"./Samples/WindowSimple.stories.tsx":351,"./index.stories.tsx":1272};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1265},1271:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ListViewSimple2",(function(){return ListViewSimple2}));__webpack_require__(22),__webpack_require__(7),__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__(0),__webpack_require__(2));__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport {\\n  JSWindow,\\n  ListView,\\n  ListHeaders,\\n  ListHeader,\\n  ListRow,\\n  ListItem,\\n} from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/ListView\\",\\n  component: ListView,\\n};\\n\\ninterface ItemType {\\n  name: string;\\n  value: number;\\n  cost: number;\\n}\\n\\nconst items: ItemType[] = [\\n  { name: \\"竹槍\\", value: 5, cost: 10 },\\n  { name: \\"銅の剣\\", value: 18, cost: 120 },\\n  { name: \\"竹槍\\", value: 5, cost: 10 },\\n  { name: \\"棍棒\\", value: 10, cost: 40 },\\n  { name: \\"鉄の槍\\", value: 30, cost: 380 },\\n  { name: \\"鉄の剣\\", value: 40, cost: 700 },\\n];\\n\\nexport const ListViewSimple2 = () => (\\n  <JSWindow width={600} title=\\"ListViewSimple\\">\\n    <ListView>\\n      <ListHeaders>\\n        <ListHeader type=\\"number\\">No</ListHeader>\\n        <ListHeader width={100}>\\n          武器の\\n          <br />\\n          名前\\n        </ListHeader>\\n        <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n        <ListHeader type=\\"number\\">価格</ListHeader>\\n      </ListHeaders>\\n      {items.map((item, index) => (\\n        <ListRow key={index}>\\n          <ListItem>{index}</ListItem>\\n          <ListItem>{item.name}</ListItem>\\n          <ListItem value={item.value}>{item.value}</ListItem>\\n          <ListItem value={item.cost}>{item.cost}</ListItem>\\n        </ListRow>\\n      ))}\\n    </ListView>\\n  </JSWindow>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"ListViewSimple2":{"startLoc":{"col":31,"line":31},"endLoc":{"col":1,"line":54},"startBody":{"col":31,"line":31},"endBody":{"col":1,"line":54}}};\nimport * as React from "react";\nimport {\n  JSWindow,\n  ListView,\n  ListHeaders,\n  ListHeader,\n  ListRow,\n  ListItem,\n} from "@jswf/react";\n\nexport default {\n  title: "Pages/ListView",\n  component: ListView,\n};\n\ninterface ItemType {\n  name: string;\n  value: number;\n  cost: number;\n}\n\nconst items: ItemType[] = [\n  { name: "竹槍", value: 5, cost: 10 },\n  { name: "銅の剣", value: 18, cost: 120 },\n  { name: "竹槍", value: 5, cost: 10 },\n  { name: "棍棒", value: 10, cost: 40 },\n  { name: "鉄の槍", value: 30, cost: 380 },\n  { name: "鉄の剣", value: 40, cost: 700 },\n];\n\nexport const ListViewSimple2 = () => (\n  <JSWindow width={600} title="ListViewSimple">\n    <ListView>\n      <ListHeaders>\n        <ListHeader type="number">No</ListHeader>\n        <ListHeader width={100}>\n          武器の\n          <br />\n          名前\n        </ListHeader>\n        <ListHeader type="number">攻撃力</ListHeader>\n        <ListHeader type="number">価格</ListHeader>\n      </ListHeaders>\n      {items.map((item, index) => (\n        <ListRow key={index}>\n          <ListItem>{index}</ListItem>\n          <ListItem>{item.name}</ListItem>\n          <ListItem value={item.value}>{item.value}</ListItem>\n          <ListItem value={item.cost}>{item.cost}</ListItem>\n        </ListRow>\n      ))}\n    </ListView>\n  </JSWindow>\n);\n\n\n\nListViewSimple2.parameters = { storySource: { source: "() => (\\n  <JSWindow width={600} title=\\"ListViewSimple\\">\\n    <ListView>\\n      <ListHeaders>\\n        <ListHeader type=\\"number\\">No</ListHeader>\\n        <ListHeader width={100}>\\n          武器の\\n          <br />\\n          名前\\n        </ListHeader>\\n        <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n        <ListHeader type=\\"number\\">価格</ListHeader>\\n      </ListHeaders>\\n      {items.map((item, index) => (\\n        <ListRow key={index}>\\n          <ListItem>{index}</ListItem>\\n          <ListItem>{item.name}</ListItem>\\n          <ListItem value={item.value}>{item.value}</ListItem>\\n          <ListItem value={item.cost}>{item.cost}</ListItem>\\n        </ListRow>\\n      ))}\\n    </ListView>\\n  </JSWindow>\\n)" }, ...ListViewSimple2.parameters };\n',locationsMap:{"list-view-simple-2":{startLoc:{col:31,line:38},endLoc:{col:1,line:61},startBody:{col:31,line:38},endBody:{col:1,line:61}}}}},title:"Pages/ListView",component:_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListView};var items=[{name:"竹槍",value:5,cost:10},{name:"銅の剣",value:18,cost:120},{name:"竹槍",value:5,cost:10},{name:"棍棒",value:10,cost:40},{name:"鉄の槍",value:30,cost:380},{name:"鉄の剣",value:40,cost:700}],ListViewSimple2=function ListViewSimple2(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.JSWindow,{width:600,title:"ListViewSimple",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListView,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListHeaders,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListHeader,{type:"number",children:"No"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListHeader,{width:100,children:["武器の",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("br",{}),"名前"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListHeader,{type:"number",children:"攻撃力"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListHeader,{type:"number",children:"価格"})]}),items.map((function(item,index){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListItem,{children:index}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListItem,{children:item.name}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListItem,{value:item.value,children:item.value}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_5__.ListItem,{value:item.cost,children:item.cost})]},index)}))]})})};ListViewSimple2.displayName="ListViewSimple2",ListViewSimple2.parameters=Object.assign({storySource:{source:'() => (\n  <JSWindow width={600} title="ListViewSimple">\n    <ListView>\n      <ListHeaders>\n        <ListHeader type="number">No</ListHeader>\n        <ListHeader width={100}>\n          武器の\n          <br />\n          名前\n        </ListHeader>\n        <ListHeader type="number">攻撃力</ListHeader>\n        <ListHeader type="number">価格</ListHeader>\n      </ListHeaders>\n      {items.map((item, index) => (\n        <ListRow key={index}>\n          <ListItem>{index}</ListItem>\n          <ListItem>{item.name}</ListItem>\n          <ListItem value={item.value}>{item.value}</ListItem>\n          <ListItem value={item.cost}>{item.cost}</ListItem>\n        </ListRow>\n      ))}\n    </ListView>\n  </JSWindow>\n)'}},ListViewSimple2.parameters)},1272:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"CompornentList",(function(){return CompornentList}));__webpack_require__(6),__webpack_require__(10),__webpack_require__(19),__webpack_require__(52),__webpack_require__(17),__webpack_require__(15),__webpack_require__(22),__webpack_require__(13),__webpack_require__(5),__webpack_require__(11),__webpack_require__(14),__webpack_require__(18);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_13___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_13__),react_dom__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(137),_jswf_react__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(2),_Samples_WindowSimple_stories__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(351),_Samples_WindowBasic_stories__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(349),_Samples_WindowChild_stories__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(350),_Samples_SplitViewBasic_stories__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(345),_Samples_ListViewBasic_stories__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(343),_Samples_TreeViewBasic_stories__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(347),_Samples_SplitViewSimple_stories__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(346),_Samples_TreeViewSimple_stories__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(348),_Samples_ListViewSimple_stories__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(344),_Samples_ClientStyle_stories__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(342);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import React, { ReactElement } from \\"react\\";\\nimport * as ReactDOM from \\"react-dom\\";\\nimport {\\n  JSWindow,\\n  ListView,\\n  ListHeaders,\\n  ListRow,\\n  ListHeader,\\n  ListItem,\\n} from \\"@jswf/react\\";\\nimport { WindowSimple } from \\"./Samples/WindowSimple.stories\\";\\nimport { WindowBasic } from \\"./Samples/WindowBasic.stories\\";\\nimport { WindowChild } from \\"./Samples/WindowChild.stories\\";\\nimport { SplitViewBasic } from \\"./Samples/SplitViewBasic.stories\\";\\nimport { ListViewBasic } from \\"./Samples/ListViewBasic.stories\\";\\nimport { TreeViewBasic } from \\"./Samples/TreeViewBasic.stories\\";\\nimport { SplitViewSimple } from \\"./Samples/SplitViewSimple.stories\\";\\nimport { TreeViewSimple } from \\"./Samples/TreeViewSimple.stories\\";\\nimport { ListViewSimple } from \\"./Samples/ListViewSimple.stories\\";\\nimport { ClientStyle } from \\"./Samples/ClientStyle.stories\\";\\n\\nexport default {\\n  title: \\"Pages\\",\\n  component: JSWindow,\\n};\\n\\nlet key = 0;\\nconst Compornents: [() => JSX.Element, string, string][] = [\\n  [WindowSimple, \\"WindowSimple\\", \\"Simple Window usage\\"],\\n  [WindowBasic, \\"WindowBasic\\", \\"Basic Parameter Window usage\\"],\\n  [WindowChild, \\"WindowChild\\", \\"Child Window usage\\"],\\n  [SplitViewSimple, \\"SplitViewSimple\\", \\"Simple SplitBar usage\\"],\\n  [SplitViewBasic, \\"SplitViewBasic\\", \\"SplitBar usage\\"],\\n  [ListViewSimple, \\"ListViewSimple\\", \\"Simple ListView usage\\"],\\n  [ListViewBasic, \\"ListViewBasic\\", \\"ListView usage\\"],\\n  [TreeViewSimple, \\"TreeViewSimple\\", \\"Simple TreeView usage\\"],\\n  [TreeViewBasic, \\"TreeViewBasic\\", \\"Basic TreeView usage\\"],\\n  [ClientStyle, \\"ClientStyle\\", \\"Client Style usage\\"],\\n];\\nexport const CompornentList = () => {\\n  let count = 0;\\n  const [nodes, setNodes] = React.useState<ReactElement[]>([]);\\n  const [src] = React.useState(\\"\\");\\n\\n  return (\\n    <>\\n      <JSWindow x={0} y={0} width={600} title=\\"Sample list\\">\\n        <ListView onItemClick={onItemClick}>\\n          <ListHeaders>\\n            <ListHeader type=\\"number\\">No</ListHeader>\\n            <ListHeader width={200}>Name</ListHeader>\\n            <ListHeader>Info</ListHeader>\\n          </ListHeaders>\\n          {Compornents.map((c, index) => (\\n            <ListRow key={index}>\\n              <ListItem>{++count}</ListItem>\\n              <ListItem>{c[1]}</ListItem>\\n              <ListItem>{c[2]}</ListItem>\\n            </ListRow>\\n          ))}\\n        </ListView>\\n      </JSWindow>\\n      {nodes}\\n      <pre>{src}</pre>\\n    </>\\n  );\\n  function onItemClick(row: number, col: number) {\\n    const newNodes = nodes.filter((node) => {\\n      return node.type !== Compornents[row][0];\\n    });\\n    newNodes.push(React.createElement(Compornents[row][0], { key: key++ }));\\n    setNodes(newNodes.slice());\\n  }\\n};\\n\\nfunction App() {\\n  return <CompornentList />;\\n}\\nReactDOM.render(<App />, document.getElementById(\\"root\\") as HTMLElement);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"CompornentList":{"startLoc":{"col":30,"line":40},"endLoc":{"col":1,"line":74},"startBody":{"col":30,"line":40},"endBody":{"col":1,"line":74}}};\nimport React, { ReactElement } from "react";\nimport * as ReactDOM from "react-dom";\nimport {\n  JSWindow,\n  ListView,\n  ListHeaders,\n  ListRow,\n  ListHeader,\n  ListItem,\n} from "@jswf/react";\nimport { WindowSimple } from "./Samples/WindowSimple.stories";\nimport { WindowBasic } from "./Samples/WindowBasic.stories";\nimport { WindowChild } from "./Samples/WindowChild.stories";\nimport { SplitViewBasic } from "./Samples/SplitViewBasic.stories";\nimport { ListViewBasic } from "./Samples/ListViewBasic.stories";\nimport { TreeViewBasic } from "./Samples/TreeViewBasic.stories";\nimport { SplitViewSimple } from "./Samples/SplitViewSimple.stories";\nimport { TreeViewSimple } from "./Samples/TreeViewSimple.stories";\nimport { ListViewSimple } from "./Samples/ListViewSimple.stories";\nimport { ClientStyle } from "./Samples/ClientStyle.stories";\n\nexport default {\n  title: "Pages",\n  component: JSWindow,\n};\n\nlet key = 0;\nconst Compornents: [() => JSX.Element, string, string][] = [\n  [WindowSimple, "WindowSimple", "Simple Window usage"],\n  [WindowBasic, "WindowBasic", "Basic Parameter Window usage"],\n  [WindowChild, "WindowChild", "Child Window usage"],\n  [SplitViewSimple, "SplitViewSimple", "Simple SplitBar usage"],\n  [SplitViewBasic, "SplitViewBasic", "SplitBar usage"],\n  [ListViewSimple, "ListViewSimple", "Simple ListView usage"],\n  [ListViewBasic, "ListViewBasic", "ListView usage"],\n  [TreeViewSimple, "TreeViewSimple", "Simple TreeView usage"],\n  [TreeViewBasic, "TreeViewBasic", "Basic TreeView usage"],\n  [ClientStyle, "ClientStyle", "Client Style usage"],\n];\nexport const CompornentList = () => {\n  let count = 0;\n  const [nodes, setNodes] = React.useState<ReactElement[]>([]);\n  const [src] = React.useState("");\n\n  return (\n    <>\n      <JSWindow x={0} y={0} width={600} title="Sample list">\n        <ListView onItemClick={onItemClick}>\n          <ListHeaders>\n            <ListHeader type="number">No</ListHeader>\n            <ListHeader width={200}>Name</ListHeader>\n            <ListHeader>Info</ListHeader>\n          </ListHeaders>\n          {Compornents.map((c, index) => (\n            <ListRow key={index}>\n              <ListItem>{++count}</ListItem>\n              <ListItem>{c[1]}</ListItem>\n              <ListItem>{c[2]}</ListItem>\n            </ListRow>\n          ))}\n        </ListView>\n      </JSWindow>\n      {nodes}\n      <pre>{src}</pre>\n    </>\n  );\n  function onItemClick(row: number, col: number) {\n    const newNodes = nodes.filter((node) => {\n      return node.type !== Compornents[row][0];\n    });\n    newNodes.push(React.createElement(Compornents[row][0], { key: key++ }));\n    setNodes(newNodes.slice());\n  }\n};\n\nfunction App() {\n  return <CompornentList />;\n}\nReactDOM.render(<App />, document.getElementById("root") as HTMLElement);\n\n\n\nCompornentList.parameters = { storySource: { source: "() => {\\n  let count = 0;\\n  const [nodes, setNodes] = React.useState<ReactElement[]>([]);\\n  const [src] = React.useState(\\"\\");\\n\\n  return (\\n    <>\\n      <JSWindow x={0} y={0} width={600} title=\\"Sample list\\">\\n        <ListView onItemClick={onItemClick}>\\n          <ListHeaders>\\n            <ListHeader type=\\"number\\">No</ListHeader>\\n            <ListHeader width={200}>Name</ListHeader>\\n            <ListHeader>Info</ListHeader>\\n          </ListHeaders>\\n          {Compornents.map((c, index) => (\\n            <ListRow key={index}>\\n              <ListItem>{++count}</ListItem>\\n              <ListItem>{c[1]}</ListItem>\\n              <ListItem>{c[2]}</ListItem>\\n            </ListRow>\\n          ))}\\n        </ListView>\\n      </JSWindow>\\n      {nodes}\\n      <pre>{src}</pre>\\n    </>\\n  );\\n  function onItemClick(row: number, col: number) {\\n    const newNodes = nodes.filter((node) => {\\n      return node.type !== Compornents[row][0];\\n    });\\n    newNodes.push(React.createElement(Compornents[row][0], { key: key++ }));\\n    setNodes(newNodes.slice());\\n  }\\n}" }, ...CompornentList.parameters };\n',locationsMap:{"compornent-list":{startLoc:{col:30,line:47},endLoc:{col:1,line:81},startBody:{col:30,line:47},endBody:{col:1,line:81}}}}},title:"Pages",component:_jswf_react__WEBPACK_IMPORTED_MODULE_15__.JSWindow};var key=0,Compornents=[[_Samples_WindowSimple_stories__WEBPACK_IMPORTED_MODULE_16__.WindowSimple,"WindowSimple","Simple Window usage"],[_Samples_WindowBasic_stories__WEBPACK_IMPORTED_MODULE_17__.WindowBasic,"WindowBasic","Basic Parameter Window usage"],[_Samples_WindowChild_stories__WEBPACK_IMPORTED_MODULE_18__.WindowChild,"WindowChild","Child Window usage"],[_Samples_SplitViewSimple_stories__WEBPACK_IMPORTED_MODULE_22__.SplitViewSimple,"SplitViewSimple","Simple SplitBar usage"],[_Samples_SplitViewBasic_stories__WEBPACK_IMPORTED_MODULE_19__.SplitViewBasic,"SplitViewBasic","SplitBar usage"],[_Samples_ListViewSimple_stories__WEBPACK_IMPORTED_MODULE_24__.ListViewSimple,"ListViewSimple","Simple ListView usage"],[_Samples_ListViewBasic_stories__WEBPACK_IMPORTED_MODULE_20__.ListViewBasic,"ListViewBasic","ListView usage"],[_Samples_TreeViewSimple_stories__WEBPACK_IMPORTED_MODULE_23__.TreeViewSimple,"TreeViewSimple","Simple TreeView usage"],[_Samples_TreeViewBasic_stories__WEBPACK_IMPORTED_MODULE_21__.TreeViewBasic,"TreeViewBasic","Basic TreeView usage"],[_Samples_ClientStyle_stories__WEBPACK_IMPORTED_MODULE_25__.ClientStyle,"ClientStyle","Client Style usage"]],CompornentList=function CompornentList(){var count=0,_React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_13___default.a.useState([]),2),nodes=_React$useState2[0],setNodes=_React$useState2[1],src=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_13___default.a.useState(""),1)[0];return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.JSWindow,{x:0,y:0,width:600,title:"Sample list",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListView,{onItemClick:function onItemClick(row,col){var newNodes=nodes.filter((function(node){return node.type!==Compornents[row][0]}));newNodes.push(react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(Compornents[row][0],{key:key++})),setNodes(newNodes.slice())},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListHeaders,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListHeader,{type:"number",children:"No"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListHeader,{width:200,children:"Name"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListHeader,{children:"Info"})]}),Compornents.map((function(c,index){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListItem,{children:++count}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListItem,{children:c[1]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_15__.ListItem,{children:c[2]})]},index)}))]})}),nodes,Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("pre",{children:src})]})};function App(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(CompornentList,{})}App.displayName="App",react_dom__WEBPACK_IMPORTED_MODULE_14__.render(Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(App,{}),document.getElementById("root")),CompornentList.parameters=Object.assign({storySource:{source:'() => {\n  let count = 0;\n  const [nodes, setNodes] = React.useState<ReactElement[]>([]);\n  const [src] = React.useState("");\n\n  return (\n    <>\n      <JSWindow x={0} y={0} width={600} title="Sample list">\n        <ListView onItemClick={onItemClick}>\n          <ListHeaders>\n            <ListHeader type="number">No</ListHeader>\n            <ListHeader width={200}>Name</ListHeader>\n            <ListHeader>Info</ListHeader>\n          </ListHeaders>\n          {Compornents.map((c, index) => (\n            <ListRow key={index}>\n              <ListItem>{++count}</ListItem>\n              <ListItem>{c[1]}</ListItem>\n              <ListItem>{c[2]}</ListItem>\n            </ListRow>\n          ))}\n        </ListView>\n      </JSWindow>\n      {nodes}\n      <pre>{src}</pre>\n    </>\n  );\n  function onItemClick(row: number, col: number) {\n    const newNodes = nodes.filter((node) => {\n      return node.type !== Compornents[row][0];\n    });\n    newNodes.push(React.createElement(Compornents[row][0], { key: key++ }));\n    setNodes(newNodes.slice());\n  }\n}'}},CompornentList.parameters)},342:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ClientStyle",(function(){return ClientStyle}));__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__(0),__webpack_require__(2));__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport {\\n  JSWindow,\\n  ListView,\\n  ListHeaders,\\n  ListHeader,\\n  ListItem,\\n  ListRow,\\n} from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/Window\\",\\n  component: JSWindow,\\n};\\n\\nexport const ClientStyle = () => (\\n  <JSWindow\\n    title=\\"WindowStyle\\"\\n    clientStyle={{ display: \\"flex\\", flexDirection: \\"column\\" }}\\n  >\\n    <div>\\n      <button>Button1</button>\\n      <button>Button2</button>\\n    </div>\\n    <ListView>\\n      <ListHeaders>\\n        <ListHeader type=\\"number\\">No</ListHeader>\\n        <ListHeader width={100}>武器の名前</ListHeader>\\n        <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n        <ListHeader type=\\"number\\">価格</ListHeader>\\n      </ListHeaders>\\n      <ListRow>\\n        <ListItem>1</ListItem>\\n        <ListItem>竹槍</ListItem>\\n        <ListItem value={5}>5</ListItem>\\n        <ListItem>10</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>2</ListItem>\\n        <ListItem>銅の剣</ListItem>\\n        <ListItem value={18}>18</ListItem>\\n        <ListItem>120</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>3</ListItem>\\n        <ListItem>棍棒</ListItem>\\n        <ListItem value={10}>10</ListItem>\\n        <ListItem>40</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>4</ListItem>\\n        <ListItem>鉄の槍</ListItem>\\n        <ListItem value={30}>30</ListItem>\\n        <ListItem>380</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>5</ListItem>\\n        <ListItem>鉄の剣</ListItem>\\n        <ListItem value={40}>40</ListItem>\\n        <ListItem>700</ListItem>\\n      </ListRow>\\n    </ListView>\\n  </JSWindow>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"ClientStyle":{"startLoc":{"col":27,"line":16},"endLoc":{"col":1,"line":64},"startBody":{"col":27,"line":16},"endBody":{"col":1,"line":64}}};\nimport * as React from "react";\nimport {\n  JSWindow,\n  ListView,\n  ListHeaders,\n  ListHeader,\n  ListItem,\n  ListRow,\n} from "@jswf/react";\n\nexport default {\n  title: "Pages/Window",\n  component: JSWindow,\n};\n\nexport const ClientStyle = () => (\n  <JSWindow\n    title="WindowStyle"\n    clientStyle={{ display: "flex", flexDirection: "column" }}\n  >\n    <div>\n      <button>Button1</button>\n      <button>Button2</button>\n    </div>\n    <ListView>\n      <ListHeaders>\n        <ListHeader type="number">No</ListHeader>\n        <ListHeader width={100}>武器の名前</ListHeader>\n        <ListHeader type="number">攻撃力</ListHeader>\n        <ListHeader type="number">価格</ListHeader>\n      </ListHeaders>\n      <ListRow>\n        <ListItem>1</ListItem>\n        <ListItem>竹槍</ListItem>\n        <ListItem value={5}>5</ListItem>\n        <ListItem>10</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>2</ListItem>\n        <ListItem>銅の剣</ListItem>\n        <ListItem value={18}>18</ListItem>\n        <ListItem>120</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>3</ListItem>\n        <ListItem>棍棒</ListItem>\n        <ListItem value={10}>10</ListItem>\n        <ListItem>40</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>4</ListItem>\n        <ListItem>鉄の槍</ListItem>\n        <ListItem value={30}>30</ListItem>\n        <ListItem>380</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>5</ListItem>\n        <ListItem>鉄の剣</ListItem>\n        <ListItem value={40}>40</ListItem>\n        <ListItem>700</ListItem>\n      </ListRow>\n    </ListView>\n  </JSWindow>\n);\n\n\n\nClientStyle.parameters = { storySource: { source: "() => (\\n  <JSWindow\\n    title=\\"WindowStyle\\"\\n    clientStyle={{ display: \\"flex\\", flexDirection: \\"column\\" }}\\n  >\\n    <div>\\n      <button>Button1</button>\\n      <button>Button2</button>\\n    </div>\\n    <ListView>\\n      <ListHeaders>\\n        <ListHeader type=\\"number\\">No</ListHeader>\\n        <ListHeader width={100}>武器の名前</ListHeader>\\n        <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n        <ListHeader type=\\"number\\">価格</ListHeader>\\n      </ListHeaders>\\n      <ListRow>\\n        <ListItem>1</ListItem>\\n        <ListItem>竹槍</ListItem>\\n        <ListItem value={5}>5</ListItem>\\n        <ListItem>10</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>2</ListItem>\\n        <ListItem>銅の剣</ListItem>\\n        <ListItem value={18}>18</ListItem>\\n        <ListItem>120</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>3</ListItem>\\n        <ListItem>棍棒</ListItem>\\n        <ListItem value={10}>10</ListItem>\\n        <ListItem>40</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>4</ListItem>\\n        <ListItem>鉄の槍</ListItem>\\n        <ListItem value={30}>30</ListItem>\\n        <ListItem>380</ListItem>\\n      </ListRow>\\n      <ListRow>\\n        <ListItem>5</ListItem>\\n        <ListItem>鉄の剣</ListItem>\\n        <ListItem value={40}>40</ListItem>\\n        <ListItem>700</ListItem>\\n      </ListRow>\\n    </ListView>\\n  </JSWindow>\\n)" }, ...ClientStyle.parameters };\n',locationsMap:{"client-style":{startLoc:{col:27,line:23},endLoc:{col:1,line:71},startBody:{col:27,line:23},endBody:{col:1,line:71}}}}},title:"Pages/Window",component:_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow};var ClientStyle=function ClientStyle(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{title:"WindowStyle",clientStyle:{display:"flex",flexDirection:"column"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("button",{children:"Button1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("button",{children:"Button2"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListView,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeaders,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{type:"number",children:"No"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{width:100,children:"武器の名前"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{type:"number",children:"攻撃力"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{type:"number",children:"価格"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"竹槍"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:5,children:"5"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"10"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"2"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"銅の剣"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:18,children:"18"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"120"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"3"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"棍棒"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:10,children:"10"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"40"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"4"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"鉄の槍"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:30,children:"30"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"380"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"5"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"鉄の剣"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:40,children:"40"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"700"})]})]})]})};ClientStyle.displayName="ClientStyle",ClientStyle.parameters=Object.assign({storySource:{source:'() => (\n  <JSWindow\n    title="WindowStyle"\n    clientStyle={{ display: "flex", flexDirection: "column" }}\n  >\n    <div>\n      <button>Button1</button>\n      <button>Button2</button>\n    </div>\n    <ListView>\n      <ListHeaders>\n        <ListHeader type="number">No</ListHeader>\n        <ListHeader width={100}>武器の名前</ListHeader>\n        <ListHeader type="number">攻撃力</ListHeader>\n        <ListHeader type="number">価格</ListHeader>\n      </ListHeaders>\n      <ListRow>\n        <ListItem>1</ListItem>\n        <ListItem>竹槍</ListItem>\n        <ListItem value={5}>5</ListItem>\n        <ListItem>10</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>2</ListItem>\n        <ListItem>銅の剣</ListItem>\n        <ListItem value={18}>18</ListItem>\n        <ListItem>120</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>3</ListItem>\n        <ListItem>棍棒</ListItem>\n        <ListItem value={10}>10</ListItem>\n        <ListItem>40</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>4</ListItem>\n        <ListItem>鉄の槍</ListItem>\n        <ListItem value={30}>30</ListItem>\n        <ListItem>380</ListItem>\n      </ListRow>\n      <ListRow>\n        <ListItem>5</ListItem>\n        <ListItem>鉄の剣</ListItem>\n        <ListItem value={40}>40</ListItem>\n        <ListItem>700</ListItem>\n      </ListRow>\n    </ListView>\n  </JSWindow>\n)'}},ClientStyle.parameters)},343:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ListViewBasic",(function(){return ListViewBasic}));__webpack_require__(6),__webpack_require__(10),__webpack_require__(19),__webpack_require__(17),__webpack_require__(15),__webpack_require__(460),__webpack_require__(24),__webpack_require__(5),__webpack_require__(11),__webpack_require__(21),__webpack_require__(14),__webpack_require__(18);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(0),_jswf_react__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(2);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport {\\n  JSWindow,\\n  ListView,\\n  SplitView,\\n  ListHeaders,\\n  ListHeader,\\n  ListRow,\\n  ListItem,\\n} from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/ListView\\",\\n  component: ListView,\\n};\\n\\nexport const ListViewBasic = () => {\\n  let listViewRef = React.useRef<ListView>(null);\\n  const [message, setMessage] = React.useState(\\"\\");\\n  let count = 1;\\n  return (\\n    <JSWindow width={600} title=\\"ListViewの実装中\\">\\n      <SplitView>\\n        <div>\\n          <button\\n            onClick={() => {\\n              //アイテムを動的に追加\\n              listViewRef.current!.addItem([\\n                count++,\\n                <>\\n                  馬<br />糞\\n                </>,\\n                0,\\n                1,\\n              ]);\\n            }}\\n          >\\n            追加\\n          </button>\\n          <br />\\n          文字列と仮想DOMを追加\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const items = listViewRef.current!.getSelectItems();\\n              for (const item of items)\\n                listViewRef.current!.setItem(item, 1, \\"馬糞\\");\\n            }}\\n          >\\n            変更\\n          </button>\\n          <br />\\n          選択したものを馬糞に変える\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const items = listViewRef.current!.getSelectItems();\\n              items.sort((a, b) => b - a);\\n              for (const item of items) listViewRef.current!.removeItem(item);\\n            }}\\n          >\\n            削除\\n          </button>\\n          <br />\\n          選択したものを削除\\n          <br />\\n          <br />\\n          {message}\\n        </div>\\n        <ListView\\n          ref={listViewRef}\\n          draggable={true}\\n          onItemClick={(row, col) => {\\n            //アイテムの取得\\n            const item = listViewRef.current!.getItem(row, col);\\n            //クリックした場所のデータを読み出す\\n            if (item) setMessage(`「${item.toString()}」がクリックされました`);\\n          }}\\n        >\\n          <ListHeaders>\\n            <ListHeader type=\\"number\\">No</ListHeader>\\n            <ListHeader width={100}>\\n              武器の\\n              <br />\\n              名前\\n            </ListHeader>\\n            <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n            <ListHeader type=\\"number\\">価格</ListHeader>\\n          </ListHeaders>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>竹槍</ListItem>\\n            <ListItem>5</ListItem>\\n            <ListItem>10</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>棍棒</ListItem>\\n            <ListItem>10</ListItem>\\n            <ListItem>40</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>銅の剣</ListItem>\\n            <ListItem>18</ListItem>\\n            <ListItem>120</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>鉄の槍</ListItem>\\n            <ListItem>30</ListItem>\\n            <ListItem>380</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>鉄の剣</ListItem>\\n            <ListItem>40</ListItem>\\n            <ListItem>700</ListItem>\\n          </ListRow>\\n        </ListView>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"ListViewBasic":{"startLoc":{"col":29,"line":17},"endLoc":{"col":1,"line":126},"startBody":{"col":29,"line":17},"endBody":{"col":1,"line":126}}};\nimport * as React from "react";\nimport {\n  JSWindow,\n  ListView,\n  SplitView,\n  ListHeaders,\n  ListHeader,\n  ListRow,\n  ListItem,\n} from "@jswf/react";\n\nexport default {\n  title: "Pages/ListView",\n  component: ListView,\n};\n\nexport const ListViewBasic = () => {\n  let listViewRef = React.useRef<ListView>(null);\n  const [message, setMessage] = React.useState("");\n  let count = 1;\n  return (\n    <JSWindow width={600} title="ListViewの実装中">\n      <SplitView>\n        <div>\n          <button\n            onClick={() => {\n              //アイテムを動的に追加\n              listViewRef.current!.addItem([\n                count++,\n                <>\n                  馬<br />糞\n                </>,\n                0,\n                1,\n              ]);\n            }}\n          >\n            追加\n          </button>\n          <br />\n          文字列と仮想DOMを追加\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const items = listViewRef.current!.getSelectItems();\n              for (const item of items)\n                listViewRef.current!.setItem(item, 1, "馬糞");\n            }}\n          >\n            変更\n          </button>\n          <br />\n          選択したものを馬糞に変える\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const items = listViewRef.current!.getSelectItems();\n              items.sort((a, b) => b - a);\n              for (const item of items) listViewRef.current!.removeItem(item);\n            }}\n          >\n            削除\n          </button>\n          <br />\n          選択したものを削除\n          <br />\n          <br />\n          {message}\n        </div>\n        <ListView\n          ref={listViewRef}\n          draggable={true}\n          onItemClick={(row, col) => {\n            //アイテムの取得\n            const item = listViewRef.current!.getItem(row, col);\n            //クリックした場所のデータを読み出す\n            if (item) setMessage(`「${item.toString()}」がクリックされました`);\n          }}\n        >\n          <ListHeaders>\n            <ListHeader type="number">No</ListHeader>\n            <ListHeader width={100}>\n              武器の\n              <br />\n              名前\n            </ListHeader>\n            <ListHeader type="number">攻撃力</ListHeader>\n            <ListHeader type="number">価格</ListHeader>\n          </ListHeaders>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>竹槍</ListItem>\n            <ListItem>5</ListItem>\n            <ListItem>10</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>棍棒</ListItem>\n            <ListItem>10</ListItem>\n            <ListItem>40</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>銅の剣</ListItem>\n            <ListItem>18</ListItem>\n            <ListItem>120</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>鉄の槍</ListItem>\n            <ListItem>30</ListItem>\n            <ListItem>380</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>鉄の剣</ListItem>\n            <ListItem>40</ListItem>\n            <ListItem>700</ListItem>\n          </ListRow>\n        </ListView>\n      </SplitView>\n    </JSWindow>\n  );\n};\n\n\n\nListViewBasic.parameters = { storySource: { source: "() => {\\n  let listViewRef = React.useRef<ListView>(null);\\n  const [message, setMessage] = React.useState(\\"\\");\\n  let count = 1;\\n  return (\\n    <JSWindow width={600} title=\\"ListViewの実装中\\">\\n      <SplitView>\\n        <div>\\n          <button\\n            onClick={() => {\\n              //アイテムを動的に追加\\n              listViewRef.current!.addItem([\\n                count++,\\n                <>\\n                  馬<br />糞\\n                </>,\\n                0,\\n                1,\\n              ]);\\n            }}\\n          >\\n            追加\\n          </button>\\n          <br />\\n          文字列と仮想DOMを追加\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const items = listViewRef.current!.getSelectItems();\\n              for (const item of items)\\n                listViewRef.current!.setItem(item, 1, \\"馬糞\\");\\n            }}\\n          >\\n            変更\\n          </button>\\n          <br />\\n          選択したものを馬糞に変える\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const items = listViewRef.current!.getSelectItems();\\n              items.sort((a, b) => b - a);\\n              for (const item of items) listViewRef.current!.removeItem(item);\\n            }}\\n          >\\n            削除\\n          </button>\\n          <br />\\n          選択したものを削除\\n          <br />\\n          <br />\\n          {message}\\n        </div>\\n        <ListView\\n          ref={listViewRef}\\n          draggable={true}\\n          onItemClick={(row, col) => {\\n            //アイテムの取得\\n            const item = listViewRef.current!.getItem(row, col);\\n            //クリックした場所のデータを読み出す\\n            if (item) setMessage(`「${item.toString()}」がクリックされました`);\\n          }}\\n        >\\n          <ListHeaders>\\n            <ListHeader type=\\"number\\">No</ListHeader>\\n            <ListHeader width={100}>\\n              武器の\\n              <br />\\n              名前\\n            </ListHeader>\\n            <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n            <ListHeader type=\\"number\\">価格</ListHeader>\\n          </ListHeaders>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>竹槍</ListItem>\\n            <ListItem>5</ListItem>\\n            <ListItem>10</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>棍棒</ListItem>\\n            <ListItem>10</ListItem>\\n            <ListItem>40</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>銅の剣</ListItem>\\n            <ListItem>18</ListItem>\\n            <ListItem>120</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>鉄の槍</ListItem>\\n            <ListItem>30</ListItem>\\n            <ListItem>380</ListItem>\\n          </ListRow>\\n          <ListRow>\\n            <ListItem>{count++}</ListItem>\\n            <ListItem>鉄の剣</ListItem>\\n            <ListItem>40</ListItem>\\n            <ListItem>700</ListItem>\\n          </ListRow>\\n        </ListView>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n}" }, ...ListViewBasic.parameters };\n',locationsMap:{"list-view-basic":{startLoc:{col:29,line:24},endLoc:{col:1,line:133},startBody:{col:29,line:24},endBody:{col:1,line:133}}}}},title:"Pages/ListView",component:_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListView};var ListViewBasic=function ListViewBasic(){var listViewRef=react__WEBPACK_IMPORTED_MODULE_13__.useRef(null),_React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_13__.useState(""),2),message=_React$useState2[0],setMessage=_React$useState2[1],count=1;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.JSWindow,{width:600,title:"ListViewの実装中",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.SplitView,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("button",{onClick:function onClick(){listViewRef.current.addItem([count++,Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.Fragment,{children:["馬",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"糞"]}),0,1])},children:"追加"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"文字列と仮想DOMを追加",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("button",{onClick:function onClick(){var _step,_iterator=_createForOfIteratorHelper(listViewRef.current.getSelectItems());try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;listViewRef.current.setItem(item,1,"馬糞")}}catch(err){_iterator.e(err)}finally{_iterator.f()}},children:"変更"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"選択したものを馬糞に変える",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("button",{onClick:function onClick(){var items=listViewRef.current.getSelectItems();items.sort((function(a,b){return b-a}));var _step2,_iterator2=_createForOfIteratorHelper(items);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var item=_step2.value;listViewRef.current.removeItem(item)}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}},children:"削除"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"選択したものを削除",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),message]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListView,{ref:listViewRef,draggable:!0,onItemClick:function onItemClick(row,col){var item=listViewRef.current.getItem(row,col);item&&setMessage("「".concat(item.toString(),"」がクリックされました"))},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListHeaders,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListHeader,{type:"number",children:"No"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListHeader,{width:100,children:["武器の",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"名前"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListHeader,{type:"number",children:"攻撃力"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListHeader,{type:"number",children:"価格"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"竹槍"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"5"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"10"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"棍棒"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"10"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"40"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"銅の剣"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"18"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"120"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"鉄の槍"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"30"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"380"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"鉄の剣"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"40"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_14__.ListItem,{children:"700"})]})]})]})})};ListViewBasic.displayName="ListViewBasic",ListViewBasic.parameters=Object.assign({storySource:{source:'() => {\n  let listViewRef = React.useRef<ListView>(null);\n  const [message, setMessage] = React.useState("");\n  let count = 1;\n  return (\n    <JSWindow width={600} title="ListViewの実装中">\n      <SplitView>\n        <div>\n          <button\n            onClick={() => {\n              //アイテムを動的に追加\n              listViewRef.current!.addItem([\n                count++,\n                <>\n                  馬<br />糞\n                </>,\n                0,\n                1,\n              ]);\n            }}\n          >\n            追加\n          </button>\n          <br />\n          文字列と仮想DOMを追加\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const items = listViewRef.current!.getSelectItems();\n              for (const item of items)\n                listViewRef.current!.setItem(item, 1, "馬糞");\n            }}\n          >\n            変更\n          </button>\n          <br />\n          選択したものを馬糞に変える\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const items = listViewRef.current!.getSelectItems();\n              items.sort((a, b) => b - a);\n              for (const item of items) listViewRef.current!.removeItem(item);\n            }}\n          >\n            削除\n          </button>\n          <br />\n          選択したものを削除\n          <br />\n          <br />\n          {message}\n        </div>\n        <ListView\n          ref={listViewRef}\n          draggable={true}\n          onItemClick={(row, col) => {\n            //アイテムの取得\n            const item = listViewRef.current!.getItem(row, col);\n            //クリックした場所のデータを読み出す\n            if (item) setMessage(`「${item.toString()}」がクリックされました`);\n          }}\n        >\n          <ListHeaders>\n            <ListHeader type="number">No</ListHeader>\n            <ListHeader width={100}>\n              武器の\n              <br />\n              名前\n            </ListHeader>\n            <ListHeader type="number">攻撃力</ListHeader>\n            <ListHeader type="number">価格</ListHeader>\n          </ListHeaders>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>竹槍</ListItem>\n            <ListItem>5</ListItem>\n            <ListItem>10</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>棍棒</ListItem>\n            <ListItem>10</ListItem>\n            <ListItem>40</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>銅の剣</ListItem>\n            <ListItem>18</ListItem>\n            <ListItem>120</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>鉄の槍</ListItem>\n            <ListItem>30</ListItem>\n            <ListItem>380</ListItem>\n          </ListRow>\n          <ListRow>\n            <ListItem>{count++}</ListItem>\n            <ListItem>鉄の剣</ListItem>\n            <ListItem>40</ListItem>\n            <ListItem>700</ListItem>\n          </ListRow>\n        </ListView>\n      </SplitView>\n    </JSWindow>\n  );\n}'}},ListViewBasic.parameters)},344:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ListViewSimple",(function(){return ListViewSimple}));__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__(0),__webpack_require__(2));__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport {\\n  JSWindow,\\n  ListView,\\n  ListHeaders,\\n  ListHeader,\\n  ListRow,\\n  ListItem,\\n} from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/ListView\\",\\n  component: ListView,\\n};\\n\\nexport const ListViewSimple = () => {\\n  let count = 1;\\n  return (\\n    <JSWindow width={600} title=\\"ListViewSimple\\">\\n      <ListView>\\n        <ListHeaders>\\n          <ListHeader type=\\"number\\">No</ListHeader>\\n          <ListHeader width={100}>\\n            武器の\\n            <br />\\n            名前\\n          </ListHeader>\\n          <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n          <ListHeader type=\\"number\\">価格</ListHeader>\\n        </ListHeaders>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>竹槍</ListItem>\\n          <ListItem value={5}>5</ListItem>\\n          <ListItem>10</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>銅の剣</ListItem>\\n          <ListItem value={18}>18</ListItem>\\n          <ListItem>120</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>棍棒</ListItem>\\n          <ListItem value={10}>10</ListItem>\\n          <ListItem>40</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>鉄の槍</ListItem>\\n          <ListItem value={30}>30</ListItem>\\n          <ListItem>380</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>鉄の剣</ListItem>\\n          <ListItem value={40}>40</ListItem>\\n          <ListItem>700</ListItem>\\n        </ListRow>\\n      </ListView>\\n    </JSWindow>\\n  );\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"ListViewSimple":{"startLoc":{"col":30,"line":16},"endLoc":{"col":1,"line":64},"startBody":{"col":30,"line":16},"endBody":{"col":1,"line":64}}};\nimport * as React from "react";\nimport {\n  JSWindow,\n  ListView,\n  ListHeaders,\n  ListHeader,\n  ListRow,\n  ListItem,\n} from "@jswf/react";\n\nexport default {\n  title: "Pages/ListView",\n  component: ListView,\n};\n\nexport const ListViewSimple = () => {\n  let count = 1;\n  return (\n    <JSWindow width={600} title="ListViewSimple">\n      <ListView>\n        <ListHeaders>\n          <ListHeader type="number">No</ListHeader>\n          <ListHeader width={100}>\n            武器の\n            <br />\n            名前\n          </ListHeader>\n          <ListHeader type="number">攻撃力</ListHeader>\n          <ListHeader type="number">価格</ListHeader>\n        </ListHeaders>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>竹槍</ListItem>\n          <ListItem value={5}>5</ListItem>\n          <ListItem>10</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>銅の剣</ListItem>\n          <ListItem value={18}>18</ListItem>\n          <ListItem>120</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>棍棒</ListItem>\n          <ListItem value={10}>10</ListItem>\n          <ListItem>40</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>鉄の槍</ListItem>\n          <ListItem value={30}>30</ListItem>\n          <ListItem>380</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>鉄の剣</ListItem>\n          <ListItem value={40}>40</ListItem>\n          <ListItem>700</ListItem>\n        </ListRow>\n      </ListView>\n    </JSWindow>\n  );\n};\n\n\n\nListViewSimple.parameters = { storySource: { source: "() => {\\n  let count = 1;\\n  return (\\n    <JSWindow width={600} title=\\"ListViewSimple\\">\\n      <ListView>\\n        <ListHeaders>\\n          <ListHeader type=\\"number\\">No</ListHeader>\\n          <ListHeader width={100}>\\n            武器の\\n            <br />\\n            名前\\n          </ListHeader>\\n          <ListHeader type=\\"number\\">攻撃力</ListHeader>\\n          <ListHeader type=\\"number\\">価格</ListHeader>\\n        </ListHeaders>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>竹槍</ListItem>\\n          <ListItem value={5}>5</ListItem>\\n          <ListItem>10</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>銅の剣</ListItem>\\n          <ListItem value={18}>18</ListItem>\\n          <ListItem>120</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>棍棒</ListItem>\\n          <ListItem value={10}>10</ListItem>\\n          <ListItem>40</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>鉄の槍</ListItem>\\n          <ListItem value={30}>30</ListItem>\\n          <ListItem>380</ListItem>\\n        </ListRow>\\n        <ListRow>\\n          <ListItem>{count++}</ListItem>\\n          <ListItem>鉄の剣</ListItem>\\n          <ListItem value={40}>40</ListItem>\\n          <ListItem>700</ListItem>\\n        </ListRow>\\n      </ListView>\\n    </JSWindow>\\n  );\\n}" }, ...ListViewSimple.parameters };\n',locationsMap:{"list-view-simple":{startLoc:{col:30,line:23},endLoc:{col:1,line:71},startBody:{col:30,line:23},endBody:{col:1,line:71}}}}},title:"Pages/ListView",component:_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListView};var ListViewSimple=function ListViewSimple(){var count=1;return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{width:600,title:"ListViewSimple",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListView,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeaders,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{type:"number",children:"No"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{width:100,children:["武器の",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("br",{}),"名前"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{type:"number",children:"攻撃力"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListHeader,{type:"number",children:"価格"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"竹槍"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:5,children:"5"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"10"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"銅の剣"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:18,children:"18"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"120"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"棍棒"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:10,children:"10"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"40"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"鉄の槍"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:30,children:"30"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"380"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListRow,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:count++}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"鉄の剣"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{value:40,children:"40"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.ListItem,{children:"700"})]})]})})};ListViewSimple.displayName="ListViewSimple",ListViewSimple.parameters=Object.assign({storySource:{source:'() => {\n  let count = 1;\n  return (\n    <JSWindow width={600} title="ListViewSimple">\n      <ListView>\n        <ListHeaders>\n          <ListHeader type="number">No</ListHeader>\n          <ListHeader width={100}>\n            武器の\n            <br />\n            名前\n          </ListHeader>\n          <ListHeader type="number">攻撃力</ListHeader>\n          <ListHeader type="number">価格</ListHeader>\n        </ListHeaders>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>竹槍</ListItem>\n          <ListItem value={5}>5</ListItem>\n          <ListItem>10</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>銅の剣</ListItem>\n          <ListItem value={18}>18</ListItem>\n          <ListItem>120</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>棍棒</ListItem>\n          <ListItem value={10}>10</ListItem>\n          <ListItem>40</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>鉄の槍</ListItem>\n          <ListItem value={30}>30</ListItem>\n          <ListItem>380</ListItem>\n        </ListRow>\n        <ListRow>\n          <ListItem>{count++}</ListItem>\n          <ListItem>鉄の剣</ListItem>\n          <ListItem value={40}>40</ListItem>\n          <ListItem>700</ListItem>\n        </ListRow>\n      </ListView>\n    </JSWindow>\n  );\n}'}},ListViewSimple.parameters)},345:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SplitViewBasic",(function(){return SplitViewBasic}));__webpack_require__(6),__webpack_require__(10),__webpack_require__(19),__webpack_require__(17),__webpack_require__(15),__webpack_require__(5),__webpack_require__(11),__webpack_require__(14),__webpack_require__(18);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(0),_jswf_react__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(2);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport { JSWindow, SplitType, SplitView } from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/SplitView\\",\\n  component: SplitView,\\n};\\n\\nexport const SplitViewBasic = () => {\\n  const [type, setType] = React.useState<SplitType>(\\"ew\\");\\n  return (\\n    <JSWindow\\n      width={500}\\n      height={400}\\n      title=\\"SplitViewBasic\\"\\n      clientStyle={{ display: \\"flex\\", flexDirection: \\"column\\" }}\\n    >\\n      {/* Button installation */}\\n      <div style={{ borderBottom: \\"solid 2px\\" }}>\\n        <button onClick={() => setType(\\"we\\")}>WE</button>\\n        <button onClick={() => setType(\\"ew\\")}>EW</button>\\n        <button onClick={() => setType(\\"ns\\")}>NS</button>\\n        <button onClick={() => setType(\\"sn\\")}>SN</button>\\n      </div>\\n      {/* Split bar (default style extends to the maximum of the parent client area) */}\\n      <SplitView type={type} style={{ position: \\"relative\\", flex: 1 }}>\\n        <div style={{ height: \\"100%\\" }}>Active side</div>\\n        <div style={{ height: \\"100%\\", backgroundColor: \\"rgb(230,255,255)\\" }}>\\n          Static side\\n        </div>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"SplitViewBasic":{"startLoc":{"col":30,"line":9},"endLoc":{"col":1,"line":34},"startBody":{"col":30,"line":9},"endBody":{"col":1,"line":34}}};\nimport * as React from "react";\nimport { JSWindow, SplitType, SplitView } from "@jswf/react";\n\nexport default {\n  title: "Pages/SplitView",\n  component: SplitView,\n};\n\nexport const SplitViewBasic = () => {\n  const [type, setType] = React.useState<SplitType>("ew");\n  return (\n    <JSWindow\n      width={500}\n      height={400}\n      title="SplitViewBasic"\n      clientStyle={{ display: "flex", flexDirection: "column" }}\n    >\n      {/* Button installation */}\n      <div style={{ borderBottom: "solid 2px" }}>\n        <button onClick={() => setType("we")}>WE</button>\n        <button onClick={() => setType("ew")}>EW</button>\n        <button onClick={() => setType("ns")}>NS</button>\n        <button onClick={() => setType("sn")}>SN</button>\n      </div>\n      {/* Split bar (default style extends to the maximum of the parent client area) */}\n      <SplitView type={type} style={{ position: "relative", flex: 1 }}>\n        <div style={{ height: "100%" }}>Active side</div>\n        <div style={{ height: "100%", backgroundColor: "rgb(230,255,255)" }}>\n          Static side\n        </div>\n      </SplitView>\n    </JSWindow>\n  );\n};\n\n\n\nSplitViewBasic.parameters = { storySource: { source: "() => {\\n  const [type, setType] = React.useState<SplitType>(\\"ew\\");\\n  return (\\n    <JSWindow\\n      width={500}\\n      height={400}\\n      title=\\"SplitViewBasic\\"\\n      clientStyle={{ display: \\"flex\\", flexDirection: \\"column\\" }}\\n    >\\n      {/* Button installation */}\\n      <div style={{ borderBottom: \\"solid 2px\\" }}>\\n        <button onClick={() => setType(\\"we\\")}>WE</button>\\n        <button onClick={() => setType(\\"ew\\")}>EW</button>\\n        <button onClick={() => setType(\\"ns\\")}>NS</button>\\n        <button onClick={() => setType(\\"sn\\")}>SN</button>\\n      </div>\\n      {/* Split bar (default style extends to the maximum of the parent client area) */}\\n      <SplitView type={type} style={{ position: \\"relative\\", flex: 1 }}>\\n        <div style={{ height: \\"100%\\" }}>Active side</div>\\n        <div style={{ height: \\"100%\\", backgroundColor: \\"rgb(230,255,255)\\" }}>\\n          Static side\\n        </div>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n}" }, ...SplitViewBasic.parameters };\n',locationsMap:{"split-view-basic":{startLoc:{col:30,line:16},endLoc:{col:1,line:41},startBody:{col:30,line:16},endBody:{col:1,line:41}}}}},title:"Pages/SplitView",component:_jswf_react__WEBPACK_IMPORTED_MODULE_11__.SplitView};var SplitViewBasic=function SplitViewBasic(){var _React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_10__.useState("ew"),2),type=_React$useState2[0],setType=_React$useState2[1];return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.JSWindow,{width:500,height:400,title:"SplitViewBasic",clientStyle:{display:"flex",flexDirection:"column"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("div",{style:{borderBottom:"solid 2px"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){return setType("we")},children:"WE"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){return setType("ew")},children:"EW"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){return setType("ns")},children:"NS"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){return setType("sn")},children:"SN"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.SplitView,{type:type,style:{position:"relative",flex:1},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{style:{height:"100%"},children:"Active side"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{style:{height:"100%",backgroundColor:"rgb(230,255,255)"},children:"Static side"})]})]})};SplitViewBasic.displayName="SplitViewBasic",SplitViewBasic.parameters=Object.assign({storySource:{source:'() => {\n  const [type, setType] = React.useState<SplitType>("ew");\n  return (\n    <JSWindow\n      width={500}\n      height={400}\n      title="SplitViewBasic"\n      clientStyle={{ display: "flex", flexDirection: "column" }}\n    >\n      {/* Button installation */}\n      <div style={{ borderBottom: "solid 2px" }}>\n        <button onClick={() => setType("we")}>WE</button>\n        <button onClick={() => setType("ew")}>EW</button>\n        <button onClick={() => setType("ns")}>NS</button>\n        <button onClick={() => setType("sn")}>SN</button>\n      </div>\n      {/* Split bar (default style extends to the maximum of the parent client area) */}\n      <SplitView type={type} style={{ position: "relative", flex: 1 }}>\n        <div style={{ height: "100%" }}>Active side</div>\n        <div style={{ height: "100%", backgroundColor: "rgb(230,255,255)" }}>\n          Static side\n        </div>\n      </SplitView>\n    </JSWindow>\n  );\n}'}},SplitViewBasic.parameters)},346:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SplitViewSimple",(function(){return SplitViewSimple}));__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__(0),__webpack_require__(2));__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport { JSWindow, SplitView } from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/SplitView\\",\\n  component: SplitView,\\n};\\n\\nexport function SplitViewSimple() {\\n  return (\\n    <JSWindow title=\\"SplitViewSimple\\">\\n      <SplitView>\\n        <div>アクティブ側</div>\\n        <div>スタティック側</div>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n}\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"SplitViewSimple":{"startLoc":{"col":7,"line":9},"endLoc":{"col":1,"line":18},"startBody":{"col":7,"line":9},"endBody":{"col":1,"line":18}}};\nimport * as React from "react";\nimport { JSWindow, SplitView } from "@jswf/react";\n\nexport default {\n  title: "Pages/SplitView",\n  component: SplitView,\n};\n\nexport const SplitViewSimple = function SplitViewSimple() {\n  return (\n    <JSWindow title="SplitViewSimple">\n      <SplitView>\n        <div>アクティブ側</div>\n        <div>スタティック側</div>\n      </SplitView>\n    </JSWindow>\n  );\n};\n\n\nSplitViewSimple.parameters = { storySource: { source: "function SplitViewSimple() {\\n  return (\\n    <JSWindow title=\\"SplitViewSimple\\">\\n      <SplitView>\\n        <div>アクティブ側</div>\\n        <div>スタティック側</div>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n}" }, ...SplitViewSimple.parameters };\n',locationsMap:{"split-view-simple":{startLoc:{col:31,line:16},endLoc:{col:1,line:25},startBody:{col:31,line:16},endBody:{col:1,line:25}}}}},title:"Pages/SplitView",component:_jswf_react__WEBPACK_IMPORTED_MODULE_3__.SplitView};var SplitViewSimple=function SplitViewSimple(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{title:"SplitViewSimple",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.SplitView,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children:"アクティブ側"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children:"スタティック側"})]})})};SplitViewSimple.displayName="SplitViewSimple",SplitViewSimple.parameters=Object.assign({storySource:{source:'function SplitViewSimple() {\n  return (\n    <JSWindow title="SplitViewSimple">\n      <SplitView>\n        <div>アクティブ側</div>\n        <div>スタティック側</div>\n      </SplitView>\n    </JSWindow>\n  );\n}'}},SplitViewSimple.parameters)},347:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TreeViewBasic",(function(){return TreeViewBasic}));__webpack_require__(6),__webpack_require__(10),__webpack_require__(19),__webpack_require__(17),__webpack_require__(15),__webpack_require__(5),__webpack_require__(11),__webpack_require__(14),__webpack_require__(18);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(0),_jswf_react__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(2);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport {\\n  JSWindow,\\n  SplitView,\\n  TreeView,\\n  TreeItem,\\n  TreeItemStyle,\\n} from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/TreeView\\",\\n  component: TreeView,\\n};\\n\\nexport const TreeViewBasic = ()=> {\\n  const treeViewRef = React.useRef<TreeView>(null);\\n  const [message, setMessage] = React.useState<React.ReactNode>();\\n  return (\\n    <JSWindow width={600} title=\\"TreeView\\">\\n      <SplitView>\\n        <div>\\n          <button\\n            onClick={() => {\\n              const item = treeViewRef.current!.getSelectItem();\\n              if (item) item.addItem({ label: \\"追加\\" });\\n            }}\\n          >\\n            追加\\n          </button>\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const item = treeViewRef.current!.getSelectItem();\\n              if (item) item.remove();\\n            }}\\n          >\\n            選択を削除\\n          </button>\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const items = treeViewRef.current!.getCheckItems();\\n              for (const item of items) item.remove();\\n            }}\\n          >\\n            チェックを削除\\n          </button>\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const item = treeViewRef.current!.findItem(\\"d\\");\\n              item?.select();\\n            }}\\n          >\\n            Data4を選択\\n          </button>\\n          <br />\\n          <br />\\n          {message}\\n        </div>\\n\\n        <TreeView\\n          itemStyle={TreeItemStyle.CHECKBOX}\\n          ref={treeViewRef}\\n          draggable={true}\\n          onItemClick={(item) => setMessage(item.getLabel())}\\n        >\\n          <TreeItem label=\\"Root\\" value=\\"a\\">\\n            <TreeItem label=\\"Data2\\" value=\\"b\\">\\n              <TreeItem label=\\"Data3\\" value=\\"c\\">\\n                <TreeItem label=\\"Data4\\" value=\\"d\\" />\\n              </TreeItem>\\n            </TreeItem>\\n            <TreeItem label={<b>太字</b>}>\\n              <TreeItem\\n                label={\\n                  <>\\n                    改行を\\n                    <br />\\n                    含む\\n                  </>\\n                }\\n              ></TreeItem>\\n            </TreeItem>\\n            <TreeItem label={<input defaultValue=\\"TextBoxも入る\\" />} />\\n          </TreeItem>\\n        </TreeView>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n}\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"TreeViewBasic":{"startLoc":{"col":29,"line":15},"endLoc":{"col":1,"line":94},"startBody":{"col":29,"line":15},"endBody":{"col":1,"line":94}}};\nimport * as React from "react";\nimport {\n  JSWindow,\n  SplitView,\n  TreeView,\n  TreeItem,\n  TreeItemStyle,\n} from "@jswf/react";\n\nexport default {\n  title: "Pages/TreeView",\n  component: TreeView,\n};\n\nexport const TreeViewBasic = ()=> {\n  const treeViewRef = React.useRef<TreeView>(null);\n  const [message, setMessage] = React.useState<React.ReactNode>();\n  return (\n    <JSWindow width={600} title="TreeView">\n      <SplitView>\n        <div>\n          <button\n            onClick={() => {\n              const item = treeViewRef.current!.getSelectItem();\n              if (item) item.addItem({ label: "追加" });\n            }}\n          >\n            追加\n          </button>\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const item = treeViewRef.current!.getSelectItem();\n              if (item) item.remove();\n            }}\n          >\n            選択を削除\n          </button>\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const items = treeViewRef.current!.getCheckItems();\n              for (const item of items) item.remove();\n            }}\n          >\n            チェックを削除\n          </button>\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const item = treeViewRef.current!.findItem("d");\n              item?.select();\n            }}\n          >\n            Data4を選択\n          </button>\n          <br />\n          <br />\n          {message}\n        </div>\n\n        <TreeView\n          itemStyle={TreeItemStyle.CHECKBOX}\n          ref={treeViewRef}\n          draggable={true}\n          onItemClick={(item) => setMessage(item.getLabel())}\n        >\n          <TreeItem label="Root" value="a">\n            <TreeItem label="Data2" value="b">\n              <TreeItem label="Data3" value="c">\n                <TreeItem label="Data4" value="d" />\n              </TreeItem>\n            </TreeItem>\n            <TreeItem label={<b>太字</b>}>\n              <TreeItem\n                label={\n                  <>\n                    改行を\n                    <br />\n                    含む\n                  </>\n                }\n              ></TreeItem>\n            </TreeItem>\n            <TreeItem label={<input defaultValue="TextBoxも入る" />} />\n          </TreeItem>\n        </TreeView>\n      </SplitView>\n    </JSWindow>\n  );\n};\n\n\nTreeViewBasic.parameters = { storySource: { source: "()=> {\\n  const treeViewRef = React.useRef<TreeView>(null);\\n  const [message, setMessage] = React.useState<React.ReactNode>();\\n  return (\\n    <JSWindow width={600} title=\\"TreeView\\">\\n      <SplitView>\\n        <div>\\n          <button\\n            onClick={() => {\\n              const item = treeViewRef.current!.getSelectItem();\\n              if (item) item.addItem({ label: \\"追加\\" });\\n            }}\\n          >\\n            追加\\n          </button>\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const item = treeViewRef.current!.getSelectItem();\\n              if (item) item.remove();\\n            }}\\n          >\\n            選択を削除\\n          </button>\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const items = treeViewRef.current!.getCheckItems();\\n              for (const item of items) item.remove();\\n            }}\\n          >\\n            チェックを削除\\n          </button>\\n          <br />\\n          <br />\\n          <button\\n            onClick={() => {\\n              const item = treeViewRef.current!.findItem(\\"d\\");\\n              item?.select();\\n            }}\\n          >\\n            Data4を選択\\n          </button>\\n          <br />\\n          <br />\\n          {message}\\n        </div>\\n\\n        <TreeView\\n          itemStyle={TreeItemStyle.CHECKBOX}\\n          ref={treeViewRef}\\n          draggable={true}\\n          onItemClick={(item) => setMessage(item.getLabel())}\\n        >\\n          <TreeItem label=\\"Root\\" value=\\"a\\">\\n            <TreeItem label=\\"Data2\\" value=\\"b\\">\\n              <TreeItem label=\\"Data3\\" value=\\"c\\">\\n                <TreeItem label=\\"Data4\\" value=\\"d\\" />\\n              </TreeItem>\\n            </TreeItem>\\n            <TreeItem label={<b>太字</b>}>\\n              <TreeItem\\n                label={\\n                  <>\\n                    改行を\\n                    <br />\\n                    含む\\n                  </>\\n                }\\n              ></TreeItem>\\n            </TreeItem>\\n            <TreeItem label={<input defaultValue=\\"TextBoxも入る\\" />} />\\n          </TreeItem>\\n        </TreeView>\\n      </SplitView>\\n    </JSWindow>\\n  );\\n}" }, ...TreeViewBasic.parameters };\n',locationsMap:{"tree-view-basic":{startLoc:{col:29,line:22},endLoc:{col:1,line:101},startBody:{col:29,line:22},endBody:{col:1,line:101}}}}},title:"Pages/TreeView",component:_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeView};var TreeViewBasic=function TreeViewBasic(){var treeViewRef=react__WEBPACK_IMPORTED_MODULE_10__.useRef(null),_React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_10__.useState(),2),message=_React$useState2[0],setMessage=_React$useState2[1];return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.JSWindow,{width:600,title:"TreeView",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.SplitView,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){var item=treeViewRef.current.getSelectItem();item&&item.addItem({label:"追加"})},children:"追加"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){var item=treeViewRef.current.getSelectItem();item&&item.remove()},children:"選択を削除"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){var _step,_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(treeViewRef.current.getCheckItems());try{for(_iterator.s();!(_step=_iterator.n()).done;){_step.value.remove()}}catch(err){_iterator.e(err)}finally{_iterator.f()}},children:"チェックを削除"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){var item=treeViewRef.current.findItem("d");null==item||item.select()},children:"Data4を選択"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),message]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeView,{itemStyle:_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItemStyle.CHECKBOX,ref:treeViewRef,draggable:!0,onItemClick:function onItemClick(item){return setMessage(item.getLabel())},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItem,{label:"Root",value:"a",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItem,{label:"Data2",value:"b",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItem,{label:"Data3",value:"c",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItem,{label:"Data4",value:"d"})})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItem,{label:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("b",{children:"太字"}),children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItem,{label:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:["改行を",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("br",{}),"含む"]})})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_11__.TreeItem,{label:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("input",{defaultValue:"TextBoxも入る"})})]})})]})})};TreeViewBasic.displayName="TreeViewBasic",TreeViewBasic.parameters=Object.assign({storySource:{source:'()=> {\n  const treeViewRef = React.useRef<TreeView>(null);\n  const [message, setMessage] = React.useState<React.ReactNode>();\n  return (\n    <JSWindow width={600} title="TreeView">\n      <SplitView>\n        <div>\n          <button\n            onClick={() => {\n              const item = treeViewRef.current!.getSelectItem();\n              if (item) item.addItem({ label: "追加" });\n            }}\n          >\n            追加\n          </button>\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const item = treeViewRef.current!.getSelectItem();\n              if (item) item.remove();\n            }}\n          >\n            選択を削除\n          </button>\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const items = treeViewRef.current!.getCheckItems();\n              for (const item of items) item.remove();\n            }}\n          >\n            チェックを削除\n          </button>\n          <br />\n          <br />\n          <button\n            onClick={() => {\n              const item = treeViewRef.current!.findItem("d");\n              item?.select();\n            }}\n          >\n            Data4を選択\n          </button>\n          <br />\n          <br />\n          {message}\n        </div>\n\n        <TreeView\n          itemStyle={TreeItemStyle.CHECKBOX}\n          ref={treeViewRef}\n          draggable={true}\n          onItemClick={(item) => setMessage(item.getLabel())}\n        >\n          <TreeItem label="Root" value="a">\n            <TreeItem label="Data2" value="b">\n              <TreeItem label="Data3" value="c">\n                <TreeItem label="Data4" value="d" />\n              </TreeItem>\n            </TreeItem>\n            <TreeItem label={<b>太字</b>}>\n              <TreeItem\n                label={\n                  <>\n                    改行を\n                    <br />\n                    含む\n                  </>\n                }\n              ></TreeItem>\n            </TreeItem>\n            <TreeItem label={<input defaultValue="TextBoxも入る" />} />\n          </TreeItem>\n        </TreeView>\n      </SplitView>\n    </JSWindow>\n  );\n}'}},TreeViewBasic.parameters)},348:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TreeViewSimple",(function(){return TreeViewSimple}));__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__(0),__webpack_require__(2));__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport { JSWindow, TreeView, TreeItem } from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/TreeView\\",\\n  component: TreeView,\\n};\\n\\nexport const TreeViewSimple = () => (\\n  <JSWindow title=\\"TreeViewSimple\\">\\n    <TreeView>\\n      <TreeItem label=\\"Root\\">\\n        <TreeItem label=\\"Data2\\">\\n          <TreeItem label=\\"Data3\\">\\n            <TreeItem label=\\"Data4\\"></TreeItem>\\n          </TreeItem>\\n        </TreeItem>\\n        <TreeItem label={<b>太字</b>}>\\n          <TreeItem\\n            label={\\n              <>\\n                改行を\\n                <br />\\n                含む\\n              </>\\n            }\\n          />\\n        </TreeItem>\\n        <TreeItem label={<input defaultValue=\\"TextBoxも入る\\" />} />\\n      </TreeItem>\\n    </TreeView>\\n  </JSWindow>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"TreeViewSimple":{"startLoc":{"col":30,"line":9},"endLoc":{"col":1,"line":33},"startBody":{"col":30,"line":9},"endBody":{"col":1,"line":33}}};\nimport * as React from "react";\nimport { JSWindow, TreeView, TreeItem } from "@jswf/react";\n\nexport default {\n  title: "Pages/TreeView",\n  component: TreeView,\n};\n\nexport const TreeViewSimple = () => (\n  <JSWindow title="TreeViewSimple">\n    <TreeView>\n      <TreeItem label="Root">\n        <TreeItem label="Data2">\n          <TreeItem label="Data3">\n            <TreeItem label="Data4"></TreeItem>\n          </TreeItem>\n        </TreeItem>\n        <TreeItem label={<b>太字</b>}>\n          <TreeItem\n            label={\n              <>\n                改行を\n                <br />\n                含む\n              </>\n            }\n          />\n        </TreeItem>\n        <TreeItem label={<input defaultValue="TextBoxも入る" />} />\n      </TreeItem>\n    </TreeView>\n  </JSWindow>\n);\n\n\n\nTreeViewSimple.parameters = { storySource: { source: "() => (\\n  <JSWindow title=\\"TreeViewSimple\\">\\n    <TreeView>\\n      <TreeItem label=\\"Root\\">\\n        <TreeItem label=\\"Data2\\">\\n          <TreeItem label=\\"Data3\\">\\n            <TreeItem label=\\"Data4\\"></TreeItem>\\n          </TreeItem>\\n        </TreeItem>\\n        <TreeItem label={<b>太字</b>}>\\n          <TreeItem\\n            label={\\n              <>\\n                改行を\\n                <br />\\n                含む\\n              </>\\n            }\\n          />\\n        </TreeItem>\\n        <TreeItem label={<input defaultValue=\\"TextBoxも入る\\" />} />\\n      </TreeItem>\\n    </TreeView>\\n  </JSWindow>\\n)" }, ...TreeViewSimple.parameters };\n',locationsMap:{"tree-view-simple":{startLoc:{col:30,line:16},endLoc:{col:1,line:40},startBody:{col:30,line:16},endBody:{col:1,line:40}}}}},title:"Pages/TreeView",component:_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeView};var TreeViewSimple=function TreeViewSimple(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{title:"TreeViewSimple",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeView,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeItem,{label:"Root",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeItem,{label:"Data2",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeItem,{label:"Data3",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeItem,{label:"Data4"})})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeItem,{label:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("b",{children:"太字"}),children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeItem,{label:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:["改行を",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("br",{}),"含む"]})})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.TreeItem,{label:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("input",{defaultValue:"TextBoxも入る"})})]})})})};TreeViewSimple.displayName="TreeViewSimple",TreeViewSimple.parameters=Object.assign({storySource:{source:'() => (\n  <JSWindow title="TreeViewSimple">\n    <TreeView>\n      <TreeItem label="Root">\n        <TreeItem label="Data2">\n          <TreeItem label="Data3">\n            <TreeItem label="Data4"></TreeItem>\n          </TreeItem>\n        </TreeItem>\n        <TreeItem label={<b>太字</b>}>\n          <TreeItem\n            label={\n              <>\n                改行を\n                <br />\n                含む\n              </>\n            }\n          />\n        </TreeItem>\n        <TreeItem label={<input defaultValue="TextBoxも入る" />} />\n      </TreeItem>\n    </TreeView>\n  </JSWindow>\n)'}},TreeViewSimple.parameters)},349:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WindowBasic",(function(){return WindowBasic}));__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__(0),__webpack_require__(2));__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport { JSWindow } from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/Window\\",\\n  component: Window,\\n};\\n\\nexport const WindowBasic = () => (\\n  <JSWindow\\n    title=\\"WindowBasic\\"\\n    x={100}\\n    y={100}\\n    width={600}\\n    height={400}\\n    titleSize={64}\\n    moveable={true}\\n    clientStyle={{ backgroundColor: \\"#CCFFCC\\" }}\\n  >\\n    <pre>\\n      {`\\n        title=\\"WindowBasic\\"\\n        x={100}\\n        y={100}\\n        width={600}\\n        height={400}\\n        titleSize={64}\\n        moveable={true}\\n        clientStyle={{ backgroundColor: \\"#CCFFCC\\" }}`}\\n    </pre>\\n  </JSWindow>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"WindowBasic":{"startLoc":{"col":27,"line":9},"endLoc":{"col":1,"line":32},"startBody":{"col":27,"line":9},"endBody":{"col":1,"line":32}}};\nimport * as React from "react";\nimport { JSWindow } from "@jswf/react";\n\nexport default {\n  title: "Pages/Window",\n  component: Window,\n};\n\nexport const WindowBasic = () => (\n  <JSWindow\n    title="WindowBasic"\n    x={100}\n    y={100}\n    width={600}\n    height={400}\n    titleSize={64}\n    moveable={true}\n    clientStyle={{ backgroundColor: "#CCFFCC" }}\n  >\n    <pre>\n      {`\n        title="WindowBasic"\n        x={100}\n        y={100}\n        width={600}\n        height={400}\n        titleSize={64}\n        moveable={true}\n        clientStyle={{ backgroundColor: "#CCFFCC" }}`}\n    </pre>\n  </JSWindow>\n);\n\n\n\nWindowBasic.parameters = { storySource: { source: "() => (\\n  <JSWindow\\n    title=\\"WindowBasic\\"\\n    x={100}\\n    y={100}\\n    width={600}\\n    height={400}\\n    titleSize={64}\\n    moveable={true}\\n    clientStyle={{ backgroundColor: \\"#CCFFCC\\" }}\\n  >\\n    <pre>\\n      {`\\n        title=\\"WindowBasic\\"\\n        x={100}\\n        y={100}\\n        width={600}\\n        height={400}\\n        titleSize={64}\\n        moveable={true}\\n        clientStyle={{ backgroundColor: \\"#CCFFCC\\" }}`}\\n    </pre>\\n  </JSWindow>\\n)" }, ...WindowBasic.parameters };\n',locationsMap:{"window-basic":{startLoc:{col:27,line:16},endLoc:{col:1,line:39},startBody:{col:27,line:16},endBody:{col:1,line:39}}}}},title:"Pages/Window",component:Window};var WindowBasic=function WindowBasic(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{title:"WindowBasic",x:100,y:100,width:600,height:400,titleSize:64,moveable:!0,clientStyle:{backgroundColor:"#CCFFCC"},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("pre",{children:'\n        title="WindowBasic"\n        x={100}\n        y={100}\n        width={600}\n        height={400}\n        titleSize={64}\n        moveable={true}\n        clientStyle={{ backgroundColor: "#CCFFCC" }}'})})};WindowBasic.displayName="WindowBasic",WindowBasic.parameters=Object.assign({storySource:{source:'() => (\n  <JSWindow\n    title="WindowBasic"\n    x={100}\n    y={100}\n    width={600}\n    height={400}\n    titleSize={64}\n    moveable={true}\n    clientStyle={{ backgroundColor: "#CCFFCC" }}\n  >\n    <pre>\n      {`\n        title="WindowBasic"\n        x={100}\n        y={100}\n        width={600}\n        height={400}\n        titleSize={64}\n        moveable={true}\n        clientStyle={{ backgroundColor: "#CCFFCC" }}`}\n    </pre>\n  </JSWindow>\n)'}},WindowBasic.parameters)},350:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WindowChild",(function(){return WindowChild}));__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__(0),__webpack_require__(2));__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import * as React from \\"react\\";\\nimport { JSWindow } from \\"@jswf/react\\";\\n\\nexport default {\\n  title: \\"Pages/Window\\",\\n  component: Window,\\n};\\n\\nexport const WindowChild = () => (\\n  <JSWindow title=\\"Parent Window\\" width={800} height={600}>\\n    <JSWindow title=\\"Child Window\\" overlapped={false}>\\n      親の中に表示される子ウインドウ\\n    </JSWindow>\\n    <JSWindow title=\\"Overlap Child Window\\">外側に出られる子ウインドウ</JSWindow>\\n  </JSWindow>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"WindowChild":{"startLoc":{"col":27,"line":9},"endLoc":{"col":1,"line":16},"startBody":{"col":27,"line":9},"endBody":{"col":1,"line":16}}};\nimport * as React from "react";\nimport { JSWindow } from "@jswf/react";\n\nexport default {\n  title: "Pages/Window",\n  component: Window,\n};\n\nexport const WindowChild = () => (\n  <JSWindow title="Parent Window" width={800} height={600}>\n    <JSWindow title="Child Window" overlapped={false}>\n      親の中に表示される子ウインドウ\n    </JSWindow>\n    <JSWindow title="Overlap Child Window">外側に出られる子ウインドウ</JSWindow>\n  </JSWindow>\n);\n\n\n\nWindowChild.parameters = { storySource: { source: "() => (\\n  <JSWindow title=\\"Parent Window\\" width={800} height={600}>\\n    <JSWindow title=\\"Child Window\\" overlapped={false}>\\n      親の中に表示される子ウインドウ\\n    </JSWindow>\\n    <JSWindow title=\\"Overlap Child Window\\">外側に出られる子ウインドウ</JSWindow>\\n  </JSWindow>\\n)" }, ...WindowChild.parameters };\n',locationsMap:{"window-child":{startLoc:{col:27,line:16},endLoc:{col:1,line:23},startBody:{col:27,line:16},endBody:{col:1,line:23}}}}},title:"Pages/Window",component:Window};var WindowChild=function WindowChild(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{title:"Parent Window",width:800,height:600,children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{title:"Child Window",overlapped:!1,children:"親の中に表示される子ウインドウ"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_3__.JSWindow,{title:"Overlap Child Window",children:"外側に出られる子ウインドウ"})]})};WindowChild.displayName="WindowChild",WindowChild.parameters=Object.assign({storySource:{source:'() => (\n  <JSWindow title="Parent Window" width={800} height={600}>\n    <JSWindow title="Child Window" overlapped={false}>\n      親の中に表示される子ウインドウ\n    </JSWindow>\n    <JSWindow title="Overlap Child Window">外側に出られる子ウインドウ</JSWindow>\n  </JSWindow>\n)'}},WindowChild.parameters)},351:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WindowSimple",(function(){return WindowSimple}));__webpack_require__(5);var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),_jswf_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(2);__webpack_require__(0);__webpack_exports__.default={parameters:{storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { JSWindow } from \\"@jswf/react\\";\\nimport React from \\"react\\";\\n\\nexport default {\\n  title: \\"Pages/Window\\",\\n  component: JSWindow,\\n};\\n\\nexport const WindowSimple = () => (\\n  <JSWindow title=\\"WindowSimple\\">Simple Window</JSWindow>\\n);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"WindowSimple":{"startLoc":{"col":28,"line":9},"endLoc":{"col":1,"line":11},"startBody":{"col":28,"line":9},"endBody":{"col":1,"line":11}}};\nimport { JSWindow } from "@jswf/react";\nimport React from "react";\n\nexport default {\n  title: "Pages/Window",\n  component: JSWindow,\n};\n\nexport const WindowSimple = () => (\n  <JSWindow title="WindowSimple">Simple Window</JSWindow>\n);\n\n\n\nWindowSimple.parameters = { storySource: { source: "() => (\\n  <JSWindow title=\\"WindowSimple\\">Simple Window</JSWindow>\\n)" }, ...WindowSimple.parameters };\n',locationsMap:{"window-simple":{startLoc:{col:28,line:16},endLoc:{col:1,line:18},startBody:{col:28,line:16},endBody:{col:1,line:18}}}}},title:"Pages/Window",component:_jswf_react__WEBPACK_IMPORTED_MODULE_2__.JSWindow};var WindowSimple=function WindowSimple(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_jswf_react__WEBPACK_IMPORTED_MODULE_2__.JSWindow,{title:"WindowSimple",children:"Simple Window"})};WindowSimple.displayName="WindowSimple",WindowSimple.parameters=Object.assign({storySource:{source:'() => (\n  <JSWindow title="WindowSimple">Simple Window</JSWindow>\n)'}},WindowSimple.parameters)},557:function(module,exports,__webpack_require__){__webpack_require__(558),__webpack_require__(839),__webpack_require__(840),__webpack_require__(995),__webpack_require__(1214),__webpack_require__(1246),__webpack_require__(1258),__webpack_require__(1260),module.exports=__webpack_require__(1264)},633:function(module,exports){},840:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(435)}},[[557,1,2]]]);
//# sourceMappingURL=main.7a79dffc3ed2748cc4ba.bundle.js.map